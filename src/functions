#!/bin/bash

### This software may be freely redistributed under the terms of the GNU
### public license.

# user may call lscfg via sudo
export PATH="${PATH}:/sbin"


#####################################################
### feel free to mod this as necessary for your needs
### comments & suggestions are welcome..
### flaming is not encouraged...
### email jbenedic@redhat.com
#####################################################


### functions

# one-dimensional array with asciidoc heading markers
declare -a headings=("=" "==" "===" "====" "=====")

base_level=1

heading() {
  # inputs
  desired_level=$1
  text=$2

  # sanity-check base_level
  [ $base_level -ge 0 ] || base_level=0

  # compute actual_level
  actual_level=$(( $desired_level + $base_level ))

  # sanity-check
  [ $actual_level -ge 0 ] || actual_level=0
  [ $actual_level -le 4 ] || actual_level=4

  # formatted output
  echo
  echo
  echo -n ${headings[$actual_level]}
  echo -n " $2 "
  echo -n ${headings[$actual_level]}
  echo
  echo
}

checkpoints_dir=checkpoints
do_checkpoint() {
  _file=$checkpoints_dir/$1
  [[ -r $_file ]] || return 1
  echo
  echo "Command:"
  echo
  echo "----"
  cat $_file
  echo "----"
  echo
  echo
  echo "Output:"
  echo
  #echo "[bash]"
  echo "----"
  bash $_file
  echo "----"
  echo
}


panic () {

cat <<EOF

+==========================+
|| :: DMESG Panic Info :: ||
+==========================+

 $DM
EOF
}

hardware () {

cat <<EOF

+===================================+
|| :: CPU, MEMORY, AND PCI INFO :: ||
+===================================+

( CPU # may be skewed if hyperthreading is enabled...)
( If hyperthreading is enabled, divide the # below by 2...)

 CPU Type               : $CTYP
 # of CPU               : $CNUM

 Memory Total           :

$mem

 PCI devices
	                : $S SCSI dev(s) (counted separately from RAID device)
			: $R RAID dev(s)
                        : $E Ethernet dev(s)
                        : $V VGA dev(s)
EOF
}

services () {

cat << EOF

+=======================+
|| :: SERVICES INFO :: ||
+=======================+

 Services "On Boot"	:

$SVC
EOF
}
network () {

cat << EOF

+======================+
|| :: NETWORK INFO :: ||
+======================+

 Configured Interfaces  :

$ETH

 Network File           :

$NET

 Hosts File             :

$HOST

 Resolver File          :

$RES

 Speed & Duplex         :

$DUP

 IP Routing Table       :

$GAT

 ARP Cache              :

$ARP
EOF
}

version () {

cat << EOF

lscfg version $version

EOF
}
